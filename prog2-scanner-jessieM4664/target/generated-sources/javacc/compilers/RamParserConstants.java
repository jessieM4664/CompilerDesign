/* Generated By:JavaCC: Do not edit this line. RamParserConstants.java */
package compilers;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RamParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT = 2;
  /** RegularExpression Id. */
  int CLS = 3;
  /** RegularExpression Id. */
  int EXT = 4;
  /** RegularExpression Id. */
  int PUB = 5;
  /** RegularExpression Id. */
  int STAT = 6;
  /** RegularExpression Id. */
  int VOID = 7;
  /** RegularExpression Id. */
  int MAIN = 8;
  /** RegularExpression Id. */
  int STRINGTYPE = 9;
  /** RegularExpression Id. */
  int SYSOUT = 10;
  /** RegularExpression Id. */
  int LENGTH = 11;
  /** RegularExpression Id. */
  int IF = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int WHILE = 14;
  /** RegularExpression Id. */
  int RETURN = 15;
  /** RegularExpression Id. */
  int INTTYPE = 16;
  /** RegularExpression Id. */
  int BOOLEAN = 17;
  /** RegularExpression Id. */
  int FALSE = 18;
  /** RegularExpression Id. */
  int TRUE = 19;
  /** RegularExpression Id. */
  int THIS = 20;
  /** RegularExpression Id. */
  int NEW = 21;
  /** RegularExpression Id. */
  int LBRACE = 22;
  /** RegularExpression Id. */
  int RBRACE = 23;
  /** RegularExpression Id. */
  int LCBRACE = 24;
  /** RegularExpression Id. */
  int RCBRACE = 25;
  /** RegularExpression Id. */
  int LBRACKET = 26;
  /** RegularExpression Id. */
  int RBRACKET = 27;
  /** RegularExpression Id. */
  int COMMA = 28;
  /** RegularExpression Id. */
  int DOT = 29;
  /** RegularExpression Id. */
  int PLUS = 30;
  /** RegularExpression Id. */
  int MINUS = 31;
  /** RegularExpression Id. */
  int MULT = 32;
  /** RegularExpression Id. */
  int LESSTHAN = 33;
  /** RegularExpression Id. */
  int AND = 34;
  /** RegularExpression Id. */
  int BANG = 35;
  /** RegularExpression Id. */
  int SEMI = 36;
  /** RegularExpression Id. */
  int EQUAL = 37;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"//\"",
    "<COMMENT>",
    "\"class\"",
    "\"extends\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"String\"",
    "\"System.out.println\"",
    "\"length\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"return\"",
    "\"integer\"",
    "\"bool\"",
    "\"false\"",
    "\"true\"",
    "\"this\"",
    "\"new\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\".\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"<\"",
    "\"&&\"",
    "\"!\"",
    "\";\"",
    "\"=\"",
  };

}
